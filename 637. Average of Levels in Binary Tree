/**
 * 637. Average of Levels in Binary Tree
 * https://leetcode.com/problems/average-of-levels-in-binary-tree/discuss/403064/C%2B%2B-24ms-faster-40.95-easy-understanding
 */

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        if(root==nullptr) return {};
        vector<double> vec;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            int each_level_size = q.size();
            double sum=0;
            double avg = 0;
            for(int i=0; i<each_level_size; ++i){
                TreeNode* node = q.front();
                q.pop();
                sum+= node->val;
                if(node->left != nullptr) q.push(node->left);
                if(node->right != nullptr) q.push(node->right);
            }
            avg = sum/each_level_size;
            vec.push_back(avg);
        }
        return vec;
    }
};
